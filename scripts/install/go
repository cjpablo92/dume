#!/bin/bash
set -e
source ./libs/logger.sh
source ./libs/conf_manager.sh

GO_LANG_VERSION="1.17.5"

log_info "installing go..."

wget https://golang.org/dl/go${GO_LANG_VERSION}.linux-amd64.tar.gz
rm -rf go${GO_LANG_VERSION}.linux-amd64.tar.gz

if is_callable_from_path "go"; then 
    log_info "\tgo already installed"
else 
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
        # LINUX
        wget https://golang.org/dl/go${GO_LANG_VERSION}.linux-amd64.tar.gz
        rm -rf /usr/local/go && tar -C /usr/local -xzf go${GO_LANG_VERSION}.linux-amd64.tar.gz
        rm -rf go${GO_LANG_VERSION}.linux-amd64.tar.gz
        export PATH=$PATH:/usr/local/go/bin
        echo 'export GOPATH=$HOME/go' >> $HOME/.profile
        echo 'export GOROOT=/usr/local/go' >> $HOME/.profile
        echo 'export GOBIN=$GOPATH/bin' >> $HOME/.profile
        echo 'export PATH=$PATH:$GOPATH/bin' >> $HOME/.profile
        echo 'export PATH=$PATH:$GOROOT/bin' >> $HOME/.profile
        
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        # MAC OS
        if is_apple_silicon; then
            wget https://golang.org/dl/go${GO_LANG_VERSION}.darwin-arm64.pkg
            installer -pkg go${GO_LANG_VERSION}.darwin-arm64.pkg -target CurrentUserHomeDirectory
            rm -rf go${GO_LANG_VERSION}.darwin-arm64.pkg
        else
            wget https://golang.org/dl/go${GO_LANG_VERSION}.darwin-amd64.pkg
            installer -pkg go${GO_LANG_VERSION}.darwin-amd64.pkg -target CurrentUserHomeDirectory
            rm -rf go${GO_LANG_VERSION}.darwin-amd64.pkg
        fi

        export PATH=$PATH:/usr/local/go/bin
        echo 'export GOPATH=$HOME/go' >> $HOME/.zshrc
        echo 'export GOROOT=/usr/local/go' >> $HOME/.zshrc
        echo 'export GOBIN=$GOPATH/bin' >> $HOME/.zshrc
        echo 'export PATH=$PATH:$GOPATH/bin' >> $HOME/.zshrc
        echo 'export PATH=$PATH:$GOROOT/bin' >> $HOME/.zshrc
    else
        log_error "unsupported os: ($OSTYPE) !!!"
        exit 1
    fi
fi

log_info "installing go...DONE!"